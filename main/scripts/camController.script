local rendercam = require("rendercam.rendercam")

function zoom(z)
	rendercam.zoom(z)
	local scale = go.get("/background", "scale")
	scale.x = scale.x + z/100
	scale.y = scale.y + z/100
	go.set("/background", "scale", scale)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.dir = vmath.vector3()
	msg.post("/jsonloader", "getcollection")


end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	if self.collection == "mapcreator" then
		local speed = 500
		if vmath.length_sqr(self.dir) > 1 then
			self.dir = vmath.normalize(self.dir)
		end
		local p = go.get_position()
		local change = p + self.dir * speed * dt
		go.set_position(change)

		self.dir = vmath.vector3()
	end

	if not self.doneOnce and self.collection then
		self.doneOnce = true
		if self.collection ~= "mapcreator" then
			rendercam.follow(go.get_id("/player"), true, go.get_id("/"..self.collection.."_camera"))
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collection") then
		self.collection = message.col
	end
end

function on_input(self, action_id, action)
	if self.collection == "mapcreator" then
		if action_id == hash("key_up") then
			self.dir.y = 1
		end
		if action_id == hash("key_down") then
			self.dir.y = -1
		end
		if action_id == hash("key_left") then
			self.dir.x = -1
		end
		if action_id == hash("key_right") then
			self.dir.x = 1
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
