local ColyseusClient = require("colyseus.client")

local client
local room
local globals = require("lua_modules.globals")
local json = require("lua_modules.json")

function init(self)
	local hn = globals.hostname(true):gsub("http", "")
	client = ColyseusClient.new("ws"..hn)
	local mapname = "amogus"
	local mjson = resource.load("/res/json files/"..mapname..".json")
	client.join_or_create("inGame", {loadMap = false, mapName = mapname, mapJson = mjson}, function(err, _room)
		if err then
			print("JOIN ERROR: " .. err)
			return
		end

		room = _room
	end)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
