go.property("numObjects", 0)
go.property("fromDir", true)

local function tablelen(T, has_integer_keys)
	local count = 0
	if has_integer_keys then
		for i, v in ipairs(T) do
			count = count + 1
		end
		return count
	else
		for i, v in pairs(T) do
			count = count + 1
		end
		return count
	end
end

function init(self)
	self.objs = {}
	self.numObjects = 0
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)

end

function on_message(self, message_id, message, sender)
	if message_id == hash("addobject") then
		self.objs[message.key] = {obj = message.val, data = message.objdata}
		self.numObjects = self.numObjects + 1
		print(self.numObjects.. " out of " .. self.objsNeeded .. " objects loaded")
		if self.numObjects == self.objsNeeded then
			print("All objects loaded")
			for i, v in ipairs(self.objs) do
				msg.post(v.obj, "data", v.data)
			end

			if self.collection == "ingame" then
				msg.post("/player#player", "allLoaded")
			elseif self.collection == "multiplayer" then
				msg.post("/player#mPlayer", "allLoaded")
			end
		end
	end
	if message_id == hash("tabledatalen") then
		print("i got a task yay")
		self.objsNeeded = message.len
		self.fromDir = message.fromDir
		self.collection = message.collection
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
